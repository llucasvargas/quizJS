{"version":3,"sources":["componentes/quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Pergunta","perguntas","id","pergunta","opcoes","opcao1","opcao2","opcao3","opcao4","respostas","resposta","opcao","_useState","useState","_useState2","_slicedToArray","pontuacaoTotal","setPontuacaoTotal","_useState3","_useState4","numeroQuestao","setNumeroQuestao","_useState5","_useState6","acertos","setAcertos","_useState7","_useState8","erros","setErros","_useState9","_useState10","setResposta","_useState11","_useState12","mostrarSegundaPergunta","setMostrarSegundaPergunta","aviso","document","querySelector","encaminharAlternativa","alternativa","recarregarPagina","window","location","reload","React","createElement","className","length","onSubmit","event","preventDefault","innerHTML","onClick","App","Quiz","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fb30a6ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Pergunta = () => {\r\n  const perguntas = [\r\n    { id: 1, pergunta: 'O que é um algoritmo?' },\r\n    { id: 2, pergunta: 'O que é uma variável em programação?' },\r\n    { id: 3, pergunta: 'O que é um loop em programação?' },\r\n    { id: 4, pergunta: 'O que é uma estrutura condicional em programação?' },\r\n    { id: 5, pergunta: 'O que é uma função em programação?' },\r\n    { id: 6, pergunta: 'O que é a recursão em programação?' },\r\n    { id: 7, pergunta: 'O que é uma estrutura de dados em programação?' },\r\n    { id: 8, pergunta: 'O que é uma declaração de controle de fluxo em programação?' },\r\n    { id: 9, pergunta: 'O que é a complexidade de um algoritmo?' },\r\n    { id: 10, pergunta: 'O que é depuração (debugging) em programação?' }\r\n  ];\r\n\r\n  const opcoes = [\r\n    {\r\n      id: 1, opcao1:\r\n        `a) Uma linguagem de programação.`,\r\n        opcao2: `b) Um tipo de dado.`,\r\n        opcao3: `c) Uma sequência de instruções para resolver um problema.`,\r\n        opcao4: `d) Um erro no código`\r\n    },\r\n    {\r\n      id: 2, opcao1:\r\n      `a) Um resultado de uma expressão matemática.`,\r\n      opcao2: `b) Um laço de repetição.`,\r\n      opcao3: `c) Um local de armazenamento para dados.`,\r\n      opcao4: `d) Uma função pré-definida.`\r\n    },\r\n    {\r\n      id: 3, opcao1:\r\n      `a) Uma estrutura condicional.`,\r\n      opcao2: `b) Uma função que retorna um valor.`,\r\n      opcao3: `c) Um tipo de dado.`,\r\n      opcao4: `d) Uma estrutura de controle para repetir um bloco de código.`\r\n    },\r\n    {\r\n      id: 4, opcao1:\r\n      `a) Uma forma de declarar uma variável.`,\r\n      opcao2: `b) Um tipo de dado numérico.`,\r\n      opcao3: `c) Um bloco de código executado várias vezes.`,\r\n      opcao4: `d) Uma estrutura de controle que permite tomar decisões com base em condições.`\r\n    },\r\n    {\r\n      id: 5, opcao1: `a) Um operador matemático.`,\r\n      opcao2: `b) Um tipo de dado.`,\r\n      opcao3: `c) Uma estrutura de controle para repetição.`,\r\n      opcao4: `d) Um bloco de código nomeado que executa uma tarefa específica.`\r\n    },\r\n    {\r\n      id: 6, opcao1: `a) Uma função que chama a si mesma.`,\r\n      opcao2: `b) Um tipo de erro de sintaxe.`,\r\n      opcao3: `c) Uma forma de depuração de código.`,\r\n      opcao4: `d) Um operador de atribuição.`\r\n    },\r\n    {\r\n      id: 7, opcao1: `a) Um formato para impressão de resultados.`,\r\n      opcao2: `b) Uma forma de armazenar dados na memória.`,\r\n      opcao3: `c) Uma função que retorna um valor booleano.`,\r\n      opcao4: `d) Uma operação matemática.`\r\n    },\r\n    {\r\n      id: 8, opcao1: `a) Um comentário no código.`,\r\n      opcao2: `b) Uma forma de dividir o código em blocos.`,\r\n      opcao3: `c) Uma estrutura condicional.`,\r\n      opcao4: `d) Uma operação matemática.`\r\n    },\r\n    {\r\n      id: 9, opcao1: `a) O número de linhas de código em um programa.`,\r\n      opcao2: `b) O tempo necessário para compilar um programa.`,\r\n      opcao3: `c) A quantidade de recursos que um algoritmo consome.`,\r\n      opcao4: `d) O número de funções em um programa.`\r\n    },\r\n    {\r\n      id: 10, opcao1: `a) A otimização de um algoritmo.`,\r\n      opcao2: `b) A documentação de um programa.`,\r\n      opcao3: `c) A execução passo a passo do código para encontrar e corrigir erros.`,\r\n      opcao4: `d) A análise de resultados de um programa.`\r\n    }\r\n  ];\r\n\r\n  const respostas = [\r\n      {id: 1, resposta:'Resposta correta: c) Uma sequência de instruções para resolver um problema', opcao: 'c'},\r\n      {id: 2, resposta:'Resposta correta: c) Um local de armazenamento para dados.', opcao: 'c'},\r\n      {id: 3, resposta:'Resposta correta: d) Uma estrutura de controle para repetir um bloco de código.', opcao: 'd'},\r\n      {id: 4, resposta:'Resposta correta: d) Uma estrutura de controle que permite tomar decisões com base em condições.', opcao: 'd'},\r\n      {id: 5, resposta:'Resposta correta: d) Um bloco de código nomeado que executa uma tarefa específica.', opcao: 'd'},\r\n      {id: 6, resposta:'Resposta correta: a) Uma função que chama a si mesma.', opcao: 'a'},\r\n      {id: 7, resposta:'Resposta correta: b) Uma forma de armazenar dados na memória.', opcao: 'b'},\r\n      {id: 8, resposta:'Resposta correta: c) Uma estrutura condicional.', opcao: 'c'},\r\n      {id: 9, resposta:'Resposta correta: c) A quantidade de recursos que um algoritmo consome.',  opcao: 'c'},\r\n      {id: 10, resposta:'Resposta correta: c) A execução passo a passo do código para encontrar e corrigir erros.', opcao: 'c'}\r\n  ]\r\n\r\n  const [pontuacaoTotal, setPontuacaoTotal] = useState(0);\r\n  const [numeroQuestao, setNumeroQuestao] = useState(1);\r\n  const [acertos, setAcertos] = useState(0);\r\n  const [erros, setErros] = useState(0);\r\n  const [resposta, setResposta] = useState('');\r\n  const [mostrarSegundaPergunta, setMostrarSegundaPergunta] = useState(false);\r\n//  const [rendimento, setRendimento] = useState('')\r\n  const aviso = document.querySelector('.resposta')\r\n\r\n  const handleRespostaChange = (event) => {\r\n  setResposta(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (resposta === respostas[numeroQuestao - 1].opcao) {\r\n      setPontuacaoTotal(pontuacaoTotal + 10);\r\n      setAcertos(acertos + 1);\r\n      aviso.innerHTML = 'Escolha uma opção! Vale 10 pontos'\r\n    } else {\r\n      setErros(erros + 1);\r\n      setMostrarSegundaPergunta(true);\r\n      setResposta('');\r\n      aviso.innerHTML = 'Tente novamente! Vale 5 pontos.'\r\n      return; // Não continua para a próxima pergunta\r\n    }\r\n\r\n    setNumeroQuestao(numeroQuestao + 1);\r\n    setMostrarSegundaPergunta(false);\r\n    setResposta('');\r\n  };\r\n  \r\n  const handleSegundaFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (resposta === respostas[numeroQuestao - 1].opcao) {\r\n      setPontuacaoTotal(pontuacaoTotal + 5);\r\n      setAcertos(acertos + 1);\r\n      aviso.innerHTML = 'Escolha uma opção! Vale 10 pontos'\r\n    } else {\r\n      setErros(erros + 1);\r\n      aviso.innerHTML = 'Escolha uma opção! Vale 10 pontos'\r\n    }\r\n\r\n    setNumeroQuestao(numeroQuestao + 1);\r\n    setMostrarSegundaPergunta(false);\r\n    setResposta('');\r\n  };\r\n\r\n  //const nota = () => {\r\n    //if (pontuacaoTotal === 100) {\r\n      //setRendimento('Excelente!')\r\n  //} else if (pontuacaoTotal >= 75) {\r\n    //setRendimento('Otimo!')\r\n  //} else if (pontuacaoTotal >= 50) {\r\n    //setRendimento('Bom!')\r\n  //} else if (pontuacaoTotal >= 25) {\r\n    //setRendimento('Regular!')\r\n  //} else {\r\n    //setRendimento('Pessimo!')\r\n  //}\r\n  \r\n  //}\r\n\r\n  const encaminharAlternativa = (alternativa) => {\r\n    setResposta(alternativa)\r\n  }\r\n\r\n  const recarregarPagina = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  function atualiza() {\r\n    recarregarPagina()\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      {numeroQuestao <= perguntas.length ? (\r\n        <form onSubmit={mostrarSegundaPergunta ? handleSegundaFormSubmit : handleFormSubmit}>\r\n          <h1 className='titulo'>Quiz Lógica de Programação e Algoritmo!</h1>\r\n          <h2 className='subTitulo'>Pergunta {numeroQuestao}</h2>\r\n          <p className='pergunta'>{perguntas[numeroQuestao - 1].pergunta}</p>\r\n          <div className='opcoesContainer'>\r\n            <button className='opcoes' onClick={() => encaminharAlternativa('a')} >\r\n              {opcoes[numeroQuestao - 1].opcao1}\r\n            </button>\r\n            <button className='opcoes' onClick={() => encaminharAlternativa('b')}>\r\n              {opcoes[numeroQuestao - 1].opcao2}\r\n            </button>\r\n            <button className='opcoes' onClick={() => encaminharAlternativa('c')}>\r\n              {opcoes[numeroQuestao - 1].opcao3}\r\n            </button>\r\n            <button className='opcoes' onClick={() => encaminharAlternativa('d')}>\r\n              {opcoes[numeroQuestao - 1].opcao4}\r\n            </button>\r\n          </div>\r\n          <p className='resposta'>Escolha uma opção! Vale 10 pontos</p>\r\n          <div className='pontos'>\r\n            <p className='acerto'>Acertos: {acertos}</p>\r\n            <p className='erro'>Erros: {erros}</p>\r\n            <p>Pontuação Total: {pontuacaoTotal}</p>\r\n          </div>\r\n          {!mostrarSegundaPergunta}\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          <h1 className='titulo'>Resultado do Quiz</h1>\r\n          <p className='resposta'>Pontuação Total: {pontuacaoTotal}</p>\r\n          <p className='acerto'>Acertos: {acertos}</p>\r\n          <p className='erro'>Erros: {erros}</p>\r\n          <button className='button button_recarrega' onClick={atualiza}>Jogar novamente.</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pergunta;","import React from 'react';\r\nimport Quiz from './componentes/quiz';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Quiz />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}